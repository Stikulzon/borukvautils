plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.nucleoid.xyz' }
	maven { url 'https://kneelawk.com/maven' }
	maven { url "https://maven.alexiil.uk/" }
	maven { url "https://api.modrinth.com/maven/" }
	maven { url = "https://jitpack.io" }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	mavenLocal()
//	exclusiveContent {
//		forRepository {
//			maven {
//				name = "Modrinth"
//				url = "https://api.modrinth.com/maven"
//			}
//		}
//		filter {
//			includeGroup "maven.modrinth"
//		}
//	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation include("maven.modrinth:filament:0.5.2+1.21")

	modImplementation 'eu.pb4:polymer-core:0.9.1+1.21'
	modImplementation "eu.pb4:polymer-blocks:0.9.1+1.21"
	modImplementation 'eu.pb4:polymer-resource-pack:0.9.1+1.21'
	modImplementation 'eu.pb4:polymer-autohost:0.9.1+1.21'
	modImplementation 'eu.pb4:polymer-virtual-entity:0.9.1+1.21'
//	modImplementation include('eu.pb4:map-canvas-api:0.4.0+1.21')
//	modImplementation include('eu.pb4:common-protection-api:1.0.0')
//	modImplementation include('eu.pb4:sidebar-api:0.5.0+1.21')
//	modImplementation include('eu.pb4:sgui:1.6.0+1.21')
//	modImplementation include('eu.pb4:factorytools:0.3.1+1.21')
//	modImplementation include('com.kneelawk.graphlib:graphlib-core-fabric:2.0.0-beta.1+1.21')

	implementation include('com.github.Chocohead:Fabric-ASM:v2.3')
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}